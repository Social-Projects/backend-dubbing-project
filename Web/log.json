{"Request":{"Method":"GET","Url":"https://localhost:5001/api/performance","Body":null},"Response":{"StatusCode":200,"Body":[{"id":1,"title":"Performance 1","description":"Description 1"}]}}
{"Request":{"Method":"GET","Url":"https://localhost:5001/api/performance/2","Body":null},"Response":{"StatusCode":404,"Body":null}}
{"Request":{"Method":"GET","Url":"https://localhost:5001/api/performance/2/1","Body":null},"Response":{"StatusCode":404,"Body":null}}
{"Request":{"Method":"GET","Url":"https://localhost:5001/api/performance/1","Body":null},"Response":{"StatusCode":200,"Body":{"id":1,"title":"Performance 1","description":"Description 1"}}}
{"Request":{"Method":"GET","Url":"https://localhost:5001/api/log","Body":null},"Response":{"StatusCode":500,"Body":{"Path":"/api/log","Error":"Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index","StackTrace":"   at System.Collections.Generic.List`1.set_Item(Int32 index, T value)\r\n   at Web.ApiControllers.LogController.Get()\r\n   at lambda_method(Closure , Object )\r\n   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\r\n   at Web.Middlewares.ExceptionHandlingMiddleware.InvokeAsync(HttpContext context)"}}}
{"Request":{"Method":"GET","Url":"https://localhost:5001/api/log","Body":null},"Response":{"StatusCode":200,"Body":[{"request":{"method":"GET","url":"https://localhost:5001/api/performance","body":null},"response":{"statusCode":200,"body":[{"id":1,"title":"Performance 1","description":"Description 1"}]}},{"request":{"method":"GET","url":"https://localhost:5001/api/performance/2","body":null},"response":{"statusCode":404,"body":null}},{"request":{"method":"GET","url":"https://localhost:5001/api/performance/2/1","body":null},"response":{"statusCode":404,"body":null}},{"request":{"method":"GET","url":"https://localhost:5001/api/performance/1","body":null},"response":{"statusCode":200,"body":{"id":1,"title":"Performance 1","description":"Description 1"}}},{"request":{"method":"GET","url":"https://localhost:5001/api/log","body":null},"response":{"statusCode":500,"body":{"Path":"/api/log","Error":"Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index","StackTrace":"   at System.Collections.Generic.List`1.set_Item(Int32 index, T value)\r\n   at Web.ApiControllers.LogController.Get()\r\n   at lambda_method(Closure , Object )\r\n   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\r\n   at Web.Middlewares.ExceptionHandlingMiddleware.InvokeAsync(HttpContext context)"}}}]}}
